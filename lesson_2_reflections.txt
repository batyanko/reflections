What happens when you initialize a repository? Why do you need to do it?
A repository is needed so that tracking/committing of changes can be done.

How is the staging area different from the working directory and the repository? What value do you think it offers?
the staging area seems to act as a buffer where a commit is being prepared. 

How can you use the staging area to make sure you have one commit per logical change?
You can elaborate on adding just the right files to the staging area. This way you can make sure only the necessary files are being committed.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches could be helpful when more alternatives of the code are needed - for example different languages, test features or alternative code. Branches can hold a version for every alternative needed.

How do the diagrams help you visualize the branch structure?
It pretty much shows the structure, thus visualizing it.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches together results in combining the latest versions of these 2 branches. Git seems to consider the older versions of both branches, deciding which lines are a result of improvement, and which should rather be removed.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Merging automatically can save some time, but may lead to unwanted changes in the code when merging different versions of the same code lines. Manual merging is on the safe side, allowing a the human developer initiating the merge to decide what the right version is. However this could cost a lot of time.